#!/bin/lua

local lfs = require("lfs")

local function get_content(directory)
	local files = {}
	local dirs = {}

	local dir, err = pcall(lfs.dir, directory)
    if not dir then
        return nil
    end

    for file in lfs.dir(directory) do
        if file ~= "." and file ~= ".." then
			local path = directory .. "/" .. file
            local mode = lfs.attributes(path, "mode")
            if mode == "file" then
            	table.insert(files, file)
            else
            	table.insert(dirs, file)
            end
        end
    end
    table.sort(files)
    table.sort(dirs)
    local content = {files = files, dirs = dirs}
    return content
end

local function main()
	-- ANSI escape codes for colors
    local colors = {
        default = "\27[0m",
        blue = "\27[01;34m",
        red = "\27[01;31m"
    }

	local path = arg[1] or "."
    local mode = lfs.attributes(path, "mode")

    if not mode then
        print(colors.red .. "Error: cannot access " .. path .. ": No such file or directory" .. colors.default)
    elseif mode == "file" then
        print(colors.default .. path .. colors.default)
    else
        local content = get_content(path)
        if not content then
            print(colors.red .. "Error: could not read content of " .. directory .. colors.default)
        else
            for _, dir in pairs(content["dirs"]) do
                print(colors.blue .. dir .. colors.default)
            end

            for _, file in pairs(content["files"]) do
                print(colors.default .. file .. colors.default)
            end
        end
    end
end

main()

